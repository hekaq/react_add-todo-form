{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","newTodos","App","useState","setTitle","setTodos","selectedUser","setSelectedUser","errorTitle","setErrorTitle","errorUser","setErrorUser","onChange","event","target","value","Number","action","method","onSubmit","preventDefault","hasErrorTitle","trim","hasErrorUser","prevTodos","newTodo","Math","max","type","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1600bf36.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    title,\n    id,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (userId: number) => (\n  usersFromServer.find(user => user.id === userId) || null\n);\n\nexport const newTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(newTodos);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const submitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const hasErrorTitle = !title.trim();\n    const hasErrorUser = selectedUser === 0;\n\n    setErrorTitle(hasErrorTitle);\n    setErrorUser(hasErrorUser);\n\n    if (hasErrorTitle || hasErrorUser) {\n      return;\n    }\n\n    setTodos(prevTodos => {\n      const newId = Math.max(...prevTodos.map(todo => todo.id)) + 1;\n\n      const newTodo = {\n        id: newId,\n        title: title.trim(),\n        completed: false,\n        userId: selectedUser,\n        user: getUserById(selectedUser),\n      };\n\n      return [\n        ...prevTodos,\n        newTodo,\n      ];\n    });\n\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  const onChange = (\n    event:\n    React.ChangeEvent<HTMLInputElement>\n    | React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    if (event.target.name === 'title') {\n      setTitle(event.target.value);\n      setErrorTitle(false);\n    }\n\n    if (event.target.name === 'user') {\n      setSelectedUser(Number(event.target.value));\n      setErrorUser(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitForm}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              value={title}\n              onChange={onChange}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n          {\n            errorTitle\n            && <span className=\"error\">Please enter a title</span>\n          }\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={selectedUser}\n              onChange={onChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {\n            errorUser\n            && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}